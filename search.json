[{"path":"https://simonpcouch.github.io/metalearners/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 Posit Software, PBC Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://simonpcouch.github.io/metalearners/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Simon Couch. Author, maintainer. Max Kuhn. Author. Posit Software, PBC. Copyright holder, funder.","code":""},{"path":"https://simonpcouch.github.io/metalearners/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Couch S, Kuhn M (2024). metalearners: Experiments Model Stacking Alternatives. R package version 0.0.1, https://simonpcouch.github.io/metalearners/, https://github.com/simonpcouch/metalearners.","code":"@Manual{,   title = {metalearners: Experiments on Model Stacking Alternatives},   author = {Simon Couch and Max Kuhn},   year = {2024},   note = {R package version 0.0.1, https://simonpcouch.github.io/metalearners/},   url = {https://github.com/simonpcouch/metalearners}, }"},{"path":"https://simonpcouch.github.io/metalearners/index.html","id":"metalearners","dir":"","previous_headings":"","what":"Experiments on Model Stacking Alternatives","title":"Experiments on Model Stacking Alternatives","text":"goal metalearners provide dataset arose set experiments intended benchmark time--fit predictive performance number alternative model stacking methods (“meta-learners”) use stacks package.","code":""},{"path":"https://simonpcouch.github.io/metalearners/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Experiments on Model Stacking Alternatives","text":"can install development version metalearners like :","code":"pak::pak(\"simonpcouch/metalearners\")"},{"path":"https://simonpcouch.github.io/metalearners/index.html","id":"data","dir":"","previous_headings":"","what":"Data","title":"Experiments on Model Stacking Alternatives","text":"dataset metalearners package looks like :","code":"library(metalearners)  metalearners #> # A tibble: 217 × 8 #>    task   meta_learner   recipe  specification elapsed metric estimate estimator #>    <fct>  <fct>          <fct>   <fct>           <dbl> <chr>     <dbl> <chr>     #>  1 barley minimal_glmnet Minimal GLM (glmnet)    0.628 rsq       0.977 standard  #>  2 barley minimal_glmnet Minimal GLM (glmnet)    0.628 rmse      2.29  standard  #>  3 barley minimal_lgb    Minimal Boosted Tree… 194.    rsq       0.966 standard  #>  4 barley minimal_lgb    Minimal Boosted Tree… 194.    rmse      3.13  standard  #>  5 barley minimal_xgb    Minimal Boosted Tree… 263.    rsq       0.973 standard  #>  6 barley minimal_xgb    Minimal Boosted Tree… 263.    rmse      2.53  standard  #>  7 barley normalize_bt   Center… Bagged Tree …  25.7   rsq       0.970 standard  #>  8 barley normalize_bt   Center… Bagged Tree …  25.7   rmse      2.63  standard  #>  9 barley normalize_nn   Center… Neural Netwo… 407.    rsq       0.859 standard  #> 10 barley normalize_nn   Center… Neural Netwo… 407.    rmse      5.75  standard  #> # ℹ 207 more rows"},{"path":"https://simonpcouch.github.io/metalearners/reference/stacking-package.html","id":null,"dir":"Reference","previous_headings":"","what":"metalearners: Experiments on Model metalearners Alternatives — metalearners-package","title":"metalearners: Experiments on Model metalearners Alternatives — metalearners-package","text":"Supplies dataset arose set experiments intended benchmark time--fit predictive performance number alternative model stacking methods (\"meta-learners\") use stacks package.","code":""},{"path":"https://simonpcouch.github.io/metalearners/reference/stacking-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"metalearners: Experiments on Model metalearners Alternatives — metalearners-package","text":"Maintainer: Simon Couch simon.couch@posit.co Authors: Max Kuhn max@posit.co contributors: Posit Software, PBC [copyright holder, funder]","code":""},{"path":"https://simonpcouch.github.io/metalearners/reference/stacking.html","id":null,"dir":"Reference","previous_headings":"","what":"Data on model metalearners experiments — metalearners","title":"Data on model metalearners experiments — metalearners","text":"metalearners arose set experiments intended benchmark time--fit predictive performance number alternative model stacking methods (\"meta-learners\") use stacks package. row data represents unique combination task, proposed meta-learner (recipe + specification), performance metric. meta-learner minimal_glmnet existing meta-learner, remaining entries represent alternative meta-learners compared minimal_glmnet.","code":""},{"path":"https://simonpcouch.github.io/metalearners/reference/stacking.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data on model metalearners experiments — metalearners","text":"","code":"metalearners"},{"path":[]},{"path":"https://simonpcouch.github.io/metalearners/reference/stacking.html","id":"metalearners","dir":"Reference","previous_headings":"","what":"metalearners","title":"Data on model metalearners experiments — metalearners","text":"data frame 217 rows 8 columns: task Factor. descriptor modeling task, .e. dataset. meta_learner Factor. ID proposed meta-learner. proposed meta-learner made pairing recipe model specification. recipe Factor. recipe used preprocess data stack. See meta_learners folder linked repository implementation. specification Factor. model specification used model data stack. See meta_learners folder linked repository implementation. elapsed Numeric. elapsed time tune meta-learner resamples, seconds. \"real\" time rather CPU time. metric Character. type performance metric, returned yardstick package. estimate Character. performance estimate, returned yardstick package. estimator Character. performance estimator, returned yardstick package.","code":""},{"path":"https://simonpcouch.github.io/metalearners/reference/stacking.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Data on model metalearners experiments — metalearners","text":"https://github.com/simonpcouch/metalearner","code":""},{"path":"https://simonpcouch.github.io/metalearners/reference/stacking.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Data on model metalearners experiments — metalearners","text":"Every meta_learner evaluated every task. said, number meta-learners failed train given task, usually due memory exhaustion, failed experiments represented data. experiment carried 24-core machine 64GB memory running Linux Ubuntu 24.04. Computations distributed using forking 5 cores (except tasks caret nhl, used 2 cores.)","code":""},{"path":"https://simonpcouch.github.io/metalearners/reference/stacking.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data on model metalearners experiments — metalearners","text":"","code":"str(metalearners) #> tibble [217 × 8] (S3: tbl_df/tbl/data.frame) #>  $ task         : Factor w/ 8 levels \"barley\",\"caret\",..: 1 1 1 1 1 1 1 1 1 1 ... #>  $ meta_learner : Factor w/ 11 levels \"minimal_glmnet\",..: 1 1 2 2 3 3 4 4 5 5 ... #>  $ recipe       : Factor w/ 4 levels \"C+S, PCA, C+S\",..: 3 3 3 3 3 3 2 2 2 2 ... #>  $ specification: Factor w/ 6 levels \"Bagged Tree (rpart)\",..: 4 4 2 2 3 3 1 1 5 5 ... #>  $ elapsed      : num [1:217] 0.628 0.628 194.429 194.429 263.355 ... #>  $ metric       : chr [1:217] \"rsq\" \"rmse\" \"rsq\" \"rmse\" ... #>  $ estimate     : num [1:217] 0.977 2.288 0.966 3.134 0.973 ... #>  $ estimator    : chr [1:217] \"standard\" \"standard\" \"standard\" \"standard\" ...  metalearners #> # A tibble: 217 × 8 #>    task   meta_learner   recipe  specification elapsed metric estimate estimator #>    <fct>  <fct>          <fct>   <fct>           <dbl> <chr>     <dbl> <chr>     #>  1 barley minimal_glmnet Minimal GLM (glmnet)    0.628 rsq       0.977 standard  #>  2 barley minimal_glmnet Minimal GLM (glmnet)    0.628 rmse      2.29  standard  #>  3 barley minimal_lgb    Minimal Boosted Tree… 194.    rsq       0.966 standard  #>  4 barley minimal_lgb    Minimal Boosted Tree… 194.    rmse      3.13  standard  #>  5 barley minimal_xgb    Minimal Boosted Tree… 263.    rsq       0.973 standard  #>  6 barley minimal_xgb    Minimal Boosted Tree… 263.    rmse      2.53  standard  #>  7 barley normalize_bt   Center… Bagged Tree …  25.7   rsq       0.970 standard  #>  8 barley normalize_bt   Center… Bagged Tree …  25.7   rmse      2.63  standard  #>  9 barley normalize_nn   Center… Neural Netwo… 407.    rsq       0.859 standard  #> 10 barley normalize_nn   Center… Neural Netwo… 407.    rmse      5.75  standard  #> # ℹ 207 more rows"}]
